difference[i]<-sum(secondDay[secondDay$student_id==student,]$is_correct)-firstDayAttempt[i]*meanEach[i]
}
i<-(i+ 1)
}
exclude<-is.na(difference)
difference<-difference[!exclude]
firstDayAttempt<-firstDayAttempt[!exclude]
print('mean of the number of each student\'s attempts on the first day')
print(mean(firstDayAttempt))
print('Total number of students included in Analysis')
print(length(firstDayAttempt))
par(mfrow=c(1,2))
hist(subset(meanEach,!exclude),main="First Day",breaks=c(0,0.2,0.4,0.6,0.8,1),xlab='',ylim=c(0,length(difference)))
hist(subset(meanEach,!exclude)+difference,main="Second Day",breaks=c(0,0.2,0.4,0.6,0.8,1),xlab='',ylim=c(0,length(difference)))
#print(t.test(subset(meanEach,!exclude)+difference,subset(meanEach,!exclude),paired=TRUE))
}
compareDays(15,17,673,0,1,2,5)
compareDays<-function(day1,day2,skillId,low=0,high=1.0,minAttempt=0,maxAttempt=5){
y<-x[x$attempt==1,]
y<-y[y$skill_id==skillId,]
y<-y[order(y[,5]),]
index<-((y$created_at)==day1)
index2<-((y$created_at)==day2)
firstDay<-y[index,]
secondDay<-y[index2,]
meanEach<-vector(length=length(unique(firstDay$student_id)))
i<-1
for (student in unique(firstDay$student_id)){
meanEach[i]=mean(firstDay[firstDay$student_id==student,]$is_correct,na.rm=TRUE)
i<-i+1
}
lowIndex<- (meanEach<=high) & (meanEach>=low)
meanEach<-meanEach[lowIndex]
lowScore<-unique(firstDay$student_id)[lowIndex]
difference<-vector(length=length(unique(lowScore)))
firstDayAttempt<-vector(length=length(unique(lowScore)))
i<-1
for (student in lowScore){
firstDayAttempt[i]<-sum(firstDay$student_id==student)
if (sum(secondDay$student_id==student)==0){
difference[i]<-NA}
else if (sum(secondDay$student_id==student)<minAttempt |sum(secondDay$student_id==student)>maxAttempt){
difference[i]<-NA}
else{
difference[i]<-sum(secondDay[secondDay$student_id==student,]$is_correct)-firstDayAttempt[i]*meanEach[i]
}
i<-(i+ 1)
}
exclude<-is.na(difference)
difference<-difference[!exclude]
firstDayAttempt<-firstDayAttempt[!exclude]
print('mean of the number of each student\'s attempts on the first day')
print(mean(firstDayAttempt))
print('Total number of students included in Analysis')
print(length(firstDayAttempt))
par(mfrow=c(1,2))
hist(subset(meanEach,!exclude),main="First Day",breaks=c(0,0.2,0.4,0.6,0.8,1),xlab='',ylim=c(0,length(difference)))
hist(firstAttempt*subset(meanEach,!exclude)+difference,main="Second Day",breaks=c(0,0.2,0.4,0.6,0.8,1),xlab='',ylim=c(0,length(difference)))
#print(t.test(subset(meanEach,!exclude)+difference,subset(meanEach,!exclude),paired=TRUE))
}
compareDays(15,17,673,0,1,2,5)
compareDays<-function(day1,day2,skillId,low=0,high=1.0,minAttempt=0,maxAttempt=5){
y<-x[x$attempt==1,]
y<-y[y$skill_id==skillId,]
y<-y[order(y[,5]),]
index<-((y$created_at)==day1)
index2<-((y$created_at)==day2)
firstDay<-y[index,]
secondDay<-y[index2,]
meanEach<-vector(length=length(unique(firstDay$student_id)))
i<-1
for (student in unique(firstDay$student_id)){
meanEach[i]=mean(firstDay[firstDay$student_id==student,]$is_correct,na.rm=TRUE)
i<-i+1
}
lowIndex<- (meanEach<=high) & (meanEach>=low)
meanEach<-meanEach[lowIndex]
lowScore<-unique(firstDay$student_id)[lowIndex]
difference<-vector(length=length(unique(lowScore)))
firstDayAttempt<-vector(length=length(unique(lowScore)))
i<-1
for (student in lowScore){
firstDayAttempt[i]<-sum(firstDay$student_id==student)
if (sum(secondDay$student_id==student)==0){
difference[i]<-NA}
else if (sum(secondDay$student_id==student)<minAttempt |sum(secondDay$student_id==student)>maxAttempt){
difference[i]<-NA}
else{
difference[i]<-sum(secondDay[secondDay$student_id==student,]$is_correct)-firstDayAttempt[i]*meanEach[i]
}
i<-(i+ 1)
}
exclude<-is.na(difference)
difference<-difference[!exclude]
firstDayAttempt<-firstDayAttempt[!exclude]
print('mean of the number of each student\'s attempts on the first day')
print(mean(firstDayAttempt))
print('Total number of students included in Analysis')
print(length(firstDayAttempt))
par(mfrow=c(1,2))
hist(subset(meanEach,!exclude),main="First Day",breaks=c(0,0.2,0.4,0.6,0.8,1),xlab='',ylim=c(0,length(difference)))
hist(firstDayAttempt*subset(meanEach,!exclude)+difference,main="Second Day",breaks=c(0,0.2,0.4,0.6,0.8,1),xlab='',ylim=c(0,length(difference)))
#print(t.test(subset(meanEach,!exclude)+difference,subset(meanEach,!exclude),paired=TRUE))
}
compareDays(15,17,673,0,1,2,5)
compareDays<-function(day1,day2,skillId,low=0,high=1.0,minAttempt=0,maxAttempt=5){
y<-x[x$attempt==1,]
y<-y[y$skill_id==skillId,]
y<-y[order(y[,5]),]
index<-((y$created_at)==day1)
index2<-((y$created_at)==day2)
firstDay<-y[index,]
secondDay<-y[index2,]
meanEach<-vector(length=length(unique(firstDay$student_id)))
i<-1
for (student in unique(firstDay$student_id)){
meanEach[i]=mean(firstDay[firstDay$student_id==student,]$is_correct,na.rm=TRUE)
i<-i+1
}
lowIndex<- (meanEach<=high) & (meanEach>=low)
meanEach<-meanEach[lowIndex]
lowScore<-unique(firstDay$student_id)[lowIndex]
difference<-vector(length=length(unique(lowScore)))
firstDayAttempt<-vector(length=length(unique(lowScore)))
i<-1
for (student in lowScore){
firstDayAttempt[i]<-sum(firstDay$student_id==student)
if (sum(secondDay$student_id==student)==0){
difference[i]<-NA}
else if (sum(secondDay$student_id==student)<minAttempt |sum(secondDay$student_id==student)>maxAttempt){
difference[i]<-NA}
else{
difference[i]<-sum(secondDay[secondDay$student_id==student,]$is_correct)-firstDayAttempt[i]*meanEach[i]
}
i<-(i+ 1)
}
exclude<-is.na(difference)
difference<-difference[!exclude]
firstDayAttempt<-firstDayAttempt[!exclude]
print('mean of the number of each student\'s attempts on the first day')
print(mean(firstDayAttempt))
print('Total number of students included in Analysis')
print(length(firstDayAttempt))
par(mfrow=c(1,2))
hist(subset(meanEach,!exclude),main="First Day",breaks=c(0,0.2,0.4,0.6,0.8,1),xlab='',ylim=c(0,length(difference)))
hist(firstDayAttempt*subset(meanEach,!exclude)+difference,main="Second Day",breaks=0:5,xlab='',ylim=c(0,length(difference)))
#print(t.test(subset(meanEach,!exclude)+difference,subset(meanEach,!exclude),paired=TRUE))
}
compareDays(15,17,673,0,1,2,5)
compareDays(11,12,640,0,1,2,5)
compareDays<-function(day1,day2,skillId,low=0,high=1.0,minAttempt=0,maxAttempt=5){
y<-x[x$attempt==1,]
y<-y[y$skill_id==skillId,]
y<-y[order(y[,5]),]
index<-((y$created_at)==day1)
index2<-((y$created_at)==day2)
firstDay<-y[index,]
secondDay<-y[index2,]
meanEach<-vector(length=length(unique(firstDay$student_id)))
i<-1
for (student in unique(firstDay$student_id)){
meanEach[i]=mean(firstDay[firstDay$student_id==student,]$is_correct,na.rm=TRUE)
i<-i+1
}
lowIndex<- (meanEach<=high) & (meanEach>=low)
meanEach<-meanEach[lowIndex]
lowScore<-unique(firstDay$student_id)[lowIndex]
difference<-vector(length=length(unique(lowScore)))
firstDayAttempt<-vector(length=length(unique(lowScore)))
i<-1
for (student in lowScore){
firstDayAttempt[i]<-sum(firstDay$student_id==student)
if (sum(secondDay$student_id==student)==0){
difference[i]<-NA}
else if (sum(secondDay$student_id==student)<minAttempt |sum(secondDay$student_id==student)>maxAttempt){
difference[i]<-NA}
else{
difference[i]<-mean(secondDay[secondDay$student_id==student,]$is_correct)-meanEach[i]
}
i<-(i+ 1)
}
exclude<-is.na(difference)
difference<-difference[!exclude]
firstDayAttempt<-firstDayAttempt[!exclude]
print('mean of the number of each student\'s attempts on the first day')
print(mean(firstDayAttempt))
print('Total number of students included in Analysis')
print(length(firstDayAttempt))
par(mfrow=c(1,2))
hist(subset(meanEach,!exclude),main="First Day",breaks=c(0,0.2,0.4,0.6,0.8,1),xlab='',ylim=c(0,length(difference)))
hist(subset(meanEach,!exclude)+difference,main="Second Day",breaks=c(0,0.2,0.4,0.6,0.8,1),xlab='',ylim=c(0,length(difference)))
print(t.test(subset(meanEach,!exclude)+difference,subset(meanEach,!exclude),paired=TRUE))
}
compareDays(11,12,640,0,1,2,5)
compareDays(25,8,630,0,1,2,5)
compareDays(25,8,630,0,1,0,5)
compareDays(25,8,630,0,1,1,5)
compareDays(25,8,630,0,1,2,5)
compareDays(11,12,640,0,1,2,5)
compareDays(11,12,640,0,1,3,5)
compareDays(11,12,640,0,1,2,2)
compareDays(11,12,640,0,1,3,3)
compareDays(11,12,640,0,1,2,2)
compareDays(11,12,640,0,1,2,3)
setwd("C:/Users/primavista/Desktop/Flipped Data")
x<-read.csv("output.csv")
library(lubridate)
library(parsedate)
library(arm)
x[,5]<-day(as.Date(x[,5],'%d/%m/%y'))#
head(x[x$skill_id==640,])
uniqu(x[x$skill_id==640,7])
unique(x[x$skill_id==640,7])
(9*8*7*6*5*4*3*2)/(10^9)
unique(x[x$skill_id==644,7])
setwd("C:/Users/primavista/Desktop/Flipped Data")
x<-read.csv("output.csv")
library(lubridate)
library(parsedate)
library(arm)
x[,5]<-day(as.Date(x[,5],'%d/%m/%y'))
compareDays<-function(day1,day2,skillId,low=0,high=1.0,minAttempt=0,maxAttempt=5){
#y<-x[x$attempt==1,]
y<-x[x$skill_id==skillId,]
y<-y[order(y[,5]),]
index<-((y$created_at)==day1)
index2<-((y$created_at)==day2)
firstDay<-y[index,]
secondDay<-y[index2,]
meanEach<-vector(length=length(unique(firstDay$student_id)))
i<-1
for (student in unique(firstDay$student_id)){
meanEach[i]=mean(firstDay[firstDay$student_id==student,]$is_correct,na.rm=TRUE)
i<-i+1
}
lowIndex<- (meanEach<=high) & (meanEach>=low)
meanEach<-meanEach[lowIndex]
lowScore<-unique(firstDay$student_id)[lowIndex]
difference<-vector(length=length(unique(lowScore)))
firstDayAttempt<-vector(length=length(unique(lowScore)))
i<-1
for (student in lowScore){
firstDayAttempt[i]<-sum(firstDay$student_id==student)
if (sum(secondDay$student_id==student)==0){
difference[i]<-NA}
else if (sum(secondDay$student_id==student)<minAttempt |sum(secondDay$student_id==student)>maxAttempt){
difference[i]<-NA}
else{
difference[i]<-mean(secondDay[secondDay$student_id==student,]$is_correct)-meanEach[i]
}
i<-(i+ 1)
}
exclude<-is.na(difference)
difference<-difference[!exclude]
firstDayAttempt<-firstDayAttempt[!exclude]
print('mean of the number of each student\'s attempts on the first day')
print(mean(firstDayAttempt))
print('Total number of students included in analysis')
print(length(firstDayAttempt))
par(mfrow=c(1,2))
barplot(summary(as.factor(round((subset(meanEach,!exclude)),2))),las=2,ylim=c(0,length(difference)),col='blue')
barplot(summary(as.factor(round((subset(meanEach,!exclude))+difference,2))),las=2,ylim=c(0,length(difference)),col='blue')
print(t.test(subset(meanEach,!exclude)+difference,subset(meanEach,!exclude),paired=TRUE))
}
compareDays(day1=11,day2=12,skillId=640,minAttempt=3)
compareDays(day1=11,day2=12,skillId=640,minAttempt=4)
compareDays(day1=11,day2=12,skillId=640,minAttempt=5)
compareDays(day1=11,day2=12,skillId=640,minAttempt=4)
compareDays(day1=10,day2=12,skillId=644,minAttempt=4)
compareDays(day1=11,day2=12,skillId=640,minAttempt=4)
setwd("C:/Users/primavista/Desktop/Flipped Data")
x<-read.csv("output.csv")
compareDays<-function(day1,day2,skillId,low=0,high=1.0,minAttempt=0,maxAttempt=5){
#y<-x[x$attempt==1,]
y<-x[x$skill_id==skillId,]
y<-y[order(y[,5]),]
index<-((y$created_at)==day1)
index2<-((y$created_at)==day2)
firstDay<-y[index,]
secondDay<-y[index2,]
meanEach<-vector(length=length(unique(firstDay$student_id)))
i<-1
for (student in unique(firstDay$student_id)){
meanEach[i]=mean(firstDay[firstDay$student_id==student,]$is_correct,na.rm=TRUE)
i<-i+1
}
lowIndex<- (meanEach<=high) & (meanEach>=low)
meanEach<-meanEach[lowIndex]
lowScore<-unique(firstDay$student_id)[lowIndex]
difference<-vector(length=length(unique(lowScore)))
firstDayAttempt<-vector(length=length(unique(lowScore)))
i<-1
for (student in lowScore){
firstDayAttempt[i]<-sum(firstDay$student_id==student)
if (sum(secondDay$student_id==student)==0){
difference[i]<-NA}
else if (sum(secondDay$student_id==student)<minAttempt |sum(secondDay$student_id==student)>maxAttempt){
difference[i]<-NA}
else{
difference[i]<-mean(secondDay[secondDay$student_id==student,]$is_correct)-meanEach[i]
}
i<-(i+ 1)
}
exclude<-is.na(difference)
difference<-difference[!exclude]
firstDayAttempt<-firstDayAttempt[!exclude]
print('mean of the number of each student\'s attempts on the first day')
print(mean(firstDayAttempt))
print('Total number of students included in analysis')
print(length(firstDayAttempt))
par(mfrow=c(1,2))
barplot(summary(as.factor(round((subset(meanEach,!exclude)),2))),las=2,ylim=c(0,length(difference)),col='blue')
barplot(summary(as.factor(round((subset(meanEach,!exclude))+difference,2))),las=2,ylim=c(0,length(difference)),col='blue')
print(t.test(subset(meanEach,!exclude)+difference,subset(meanEach,!exclude),paired=TRUE))
}
compareDays(day1=11,day2=12,skillId=640,minAttempt=4)
compareDays(day1=11,day2=12,skillId=640,minAttempt=3)
y<-x[x$skill_id==640,]
y<-y[order(y[,5]),]
index<-((y$created_at)==11)
index2<-((y$created_at)==12)
firstDay<-y[index,]
secondDay<-y[index2,]
meanEach<-vector(length=length(unique(firstDay$student_id)))
x[,5]<-day(as.Date(x[,5],'%d/%m/%y'))
y<-x[x$skill_id==640,]
y<-y[order(y[,5]),]
index<-((y$created_at)==11)
index2<-((y$created_at)==12)
firstDay<-y[index,]
secondDay<-y[index2,]
meanEach<-vector(length=length(unique(firstDay$student_id)))
i<-1
for (student in unique(firstDay$student_id)){
meanEach[i]=mean(firstDay[firstDay$student_id==student,]$is_correct,na.rm=TRUE)
i<-i+1
}
lowIndex<- (meanEach<=high) & (meanEach>=low)
meanEach<-meanEach[lowIndex]
lowScore<-unique(firstDay$student_id)[lowIndex]
difference<-vector(length=length(unique(lowScore)))
firstDayAttempt<-vector(length=length(unique(lowScore)))
i<-1
meanEach<-vector(length=length(unique(firstDay$student_id)))
i<-1
for (student in unique(firstDay$student_id)){
meanEach[i]=mean(firstDay[firstDay$student_id==student,]$is_correct,na.rm=TRUE)
i<-i+1
}
lowIndex<- (meanEach<=5) & (meanEach>=4)
meanEach<-meanEach[lowIndex]
lowScore<-unique(firstDay$student_id)[lowIndex]
difference<-vector(length=length(unique(lowScore)))
firstDayAttempt<-vector(length=length(unique(lowScore)))
i<-1
for (student in lowScore){
firstDayAttempt[i]<-sum(firstDay$student_id==student)
if (sum(secondDay$student_id==student)==0){
difference[i]<-NA}
else if (sum(secondDay$student_id==student)<minAttempt |sum(secondDay$student_id==student)>maxAttempt){
difference[i]<-NA}
else{
difference[i]<-mean(secondDay[secondDay$student_id==student,]$is_correct)-meanEach[i]
}
i<-(i+ 1)
}
exclude<-is.na(difference)
difference<-difference[!exclude]
firstDayAttempt<-firstDayAttempt[!exclude]
print('mean of the number of each student\'s attempts on the first day')
print(mean(firstDayAttempt))
firstDayAttempt<-vector(length=length(unique(lowScore)))
compareDays<-function(day1,day2,skillId,low=0,high=1.0,minAttempt=0,maxAttempt=5){
#y<-x[x$attempt==1,]
y<-x[x$skill_id==skillId,]
y<-y[order(y[,5]),]
index<-((y$created_at)==day1)
index2<-((y$created_at)==day2)
firstDay<-y[index,]
secondDay<-y[index2,]
meanEach<-vector(length=length(unique(firstDay$student_id)))
i<-1
for (student in unique(firstDay$student_id)){
meanEach[i]=mean(firstDay[firstDay$student_id==student,]$is_correct,na.rm=TRUE)
i<-i+1
}
lowIndex<- (meanEach<=high) & (meanEach>=low)
meanEach<-meanEach[lowIndex]
lowScore<-unique(firstDay$student_id)[lowIndex]
difference<-vector(length=length(unique(lowScore)))
firstDayAttempt<-vector(length=length(unique(lowScore)))
i<-1
for (student in lowScore){
firstDayAttempt[i]<-sum(firstDay$student_id==student)
if (sum(secondDay$student_id==student)==0){
difference[i]<-NA}
else if (sum(secondDay$student_id==student)<minAttempt |sum(secondDay$student_id==student)>maxAttempt){
difference[i]<-NA}
else{
difference[i]<-mean(secondDay[secondDay$student_id==student,]$is_correct)-meanEach[i]
}
i<-(i+ 1)
}
exclude<-is.na(difference)
difference<-difference[!exclude]
firstDayAttempt<-firstDayAttempt[!exclude]
print('mean of the number of each student\'s attempts on the first day')
print(mean(firstDayAttempt))
print('Total number of students included in analysis')
print(length(firstDayAttempt))
par(mfrow=c(1,2))
barplot(summary(as.factor(round((subset(meanEach,!exclude)),2))),las=2,ylim=c(0,length(difference)),col='blue')
barplot(summary(as.factor(round((subset(meanEach,!exclude))+difference,2))),las=2,ylim=c(0,length(difference)),col='blue')
print(t.test(subset(meanEach,!exclude)+difference,subset(meanEach,!exclude),paired=TRUE))
}
compareDays(11,12,640,minAttempt=4)
y<-x[x$skill_id==640,]
y<-y[order(y[,5]),]
index<-((y$created_at)==11)
index2<-((y$created_at)==12)
firstDay<-y[index,]
secondDay<-y[index2,]
meanEach<-vector(length=length(unique(firstDay$student_id)))
i<-1
for (student in unique(firstDay$student_id)){
meanEach[i]=mean(firstDay[firstDay$student_id==student,]$is_correct,na.rm=TRUE)
i<-i+1
}
lowIndex<- (meanEach<=5) & (meanEach>=4)
meanEach<-meanEach[lowIndex]
lowScore<-unique(firstDay$student_id)[lowIndex]
difference<-vector(length=length(unique(lowScore)))
firstDayAttempt<-vector(length=length(unique(lowScore)))
i<-1
meanEach<-vector(length=length(unique(firstDay$student_id)))
i<-1
for (student in unique(firstDay$student_id)){
meanEach[i]=mean(firstDay[firstDay$student_id==student,]$is_correct,na.rm=TRUE)
i<-i+1
}
lowIndex<- (meanEach<=1) & (meanEach>=0)
meanEach<-meanEach[lowIndex]
lowScore<-unique(firstDay$student_id)[lowIndex]
difference<-vector(length=length(unique(lowScore)))
firstDayAttempt<-vector(length=length(unique(lowScore)))
i<-1
for (student in lowScore){
firstDayAttempt[i]<-sum(firstDay$student_id==student)
if (sum(secondDay$student_id==student)==0){
difference[i]<-NA}
else if (sum(secondDay$student_id==student)<minAttempt |sum(secondDay$student_id==student)>maxAttempt){
difference[i]<-NA}
else{
difference[i]<-mean(secondDay[secondDay$student_id==student,]$is_correct)-meanEach[i]
}
i<-(i+ 1)
}
for (student in lowScore){
firstDayAttempt[i]<-sum(firstDay$student_id==student)
if (sum(secondDay$student_id==student)==0){
difference[i]<-NA}
else if (sum(secondDay$student_id==student)<4 |sum(secondDay$student_id==student)>5){
difference[i]<-NA}
else{
difference[i]<-mean(secondDay[secondDay$student_id==student,]$is_correct)-meanEach[i]
}
i<-(i+ 1)
}
firstDayAttempt
firstDayAttempt[265]
lowScore[265]
x[x$student_id==1523]
x[x$student_id==1523,]
unique(firstDay$skill_id)
firstDay[firstDay$student_id==1523]
firstDay[firstDay$student_id==1523,]
sum(firstDay$student_id==1523)
(firstDay$student_id==1523)
day1<-11;day2<-12;skillId=640;low=0;high=1.0;minAttempt=4;maxAttempt=5
y<-x[x$skill_id==skillId,]
unique(y$skill_id)
y<-y[order(y[,5]),]
unique(y$skill_id)
index<-((y$created_at)==day1)
index2<-((y$created_at)==day2)
firstDay<-y[index,]
secondDay<-y[index2,]
meanEach<-vector(length=length(unique(firstDay$student_id)))
i<-1
for (student in unique(firstDay$student_id)){
meanEach[i]=mean(firstDay[firstDay$student_id==student,]$is_correct,na.rm=TRUE)
i<-i+1
}
lowIndex<- (meanEach<=high) & (meanEach>=low)
meanEach<-meanEach[lowIndex]
lowScore<-unique(firstDay$student_id)[lowIndex]
sum(lowIndex)
difference<-vector(length=length(unique(lowScore)))
firstDayAttempt<-vector(length=length(unique(lowScore)))
i<-1
for (student in lowScore){
firstDayAttempt[i]<-sum(firstDay$student_id==student)
i<-i+1}
firstDayAttempt
firstDayAttempt[265]
firstDayAttempt[266]
firstDayAttempt[264]
lowScore[264]
sum(firstDay$student_id==1483)
firstDay[firstDay$student_id==1483,]
z<-read.csv("output.csv")
z[z$student_id==1483 & z$skill_id==640,]
